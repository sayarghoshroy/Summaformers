15:24:53.015 [main] DEBUG com.amazonaws.AmazonWebServiceClient - Internal logging successfully configured to commons logger: true
15:24:53.060 [main] DEBUG com.amazonaws.metrics.AwsSdkMetrics - Admin mbean registered under com.amazonaws.management:type=AwsSdkMetrics
15:24:53.112 [main] DEBUG c.a.internal.config.InternalConfig - Configuration override awssdk_config_override.json not found.
15:24:53.386 [scala-execution-context-global-12] INFO  org.allenai.scienceparse.Parser - Loading gazetteer from /home/risubaba/.ai2/datastore/public/org.allenai.scienceparse/gazetteer-v5.json
15:24:53.386 [ModelLoaderThread] INFO  org.allenai.scienceparse.Parser - Loading model from /home/risubaba/.ai2/datastore/public/org.allenai.scienceparse/productionModel-v9.dat
15:24:53.387 [scala-execution-context-global-12] INFO  org.allenai.scienceparse.Parser - Loading bib model from /home/risubaba/.ai2/datastore/public/org.allenai.scienceparse/productionBibModel-v7.dat
15:24:53.391 [scala-execution-context-global-12] INFO  org.allenai.scienceparse.Parser - Creating gazetteer cache at /tmp/gazetteer-v5.json-fa485aef.gazetteerCache.bin
15:25:04.772 [scala-execution-context-global-12] INFO  o.a.scienceparse.ParserGroundTruth - Read 1609659 papers.
15:25:18.644 [ModelLoaderThread] INFO  org.allenai.scienceparse.Parser - Loaded model from /home/risubaba/.ai2/datastore/public/org.allenai.scienceparse/productionModel-v9.dat
15:25:31.913 [scala-execution-context-global-12] INFO  o.a.scienceparse.ExtractReferences - could not load kermit gazetter
15:25:31.979 [scala-execution-context-global-12] INFO  org.allenai.scienceparse.Parser - Loaded gazetteer from /home/risubaba/.ai2/datastore/public/org.allenai.scienceparse/gazetteer-v5.json
15:25:31.979 [scala-execution-context-global-12] INFO  org.allenai.scienceparse.Parser - Loaded bib model from /home/risubaba/.ai2/datastore/public/org.allenai.scienceparse/productionBibModel-v7.dat
15:25:31.984 [scala-execution-context-global-12] INFO  org.allenai.scienceparse.RunSP$ - Starting /home/risubaba/LongSumm/pdf/P17-1053.pdf
{
  "name" : "/home/risubaba/LongSumm/pdf/P17-1053.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Improved Neural Relation Detection for Knowledge Base Question Answering",
    "authors" : [ "Mo Yu", "Wenpeng Yin", "Kazi Saidul Hasan", "Cicero dos Santos", "Bing Xiang", "Bowen Zhou" ],
    "emails" : [ "yum@us.ibm.com,", "kshasan@us.ibm.com,", "cicerons@us.ibm.com,", "bingxia@us.ibm.com,", "zhou@us.ibm.com,", "wenpeng@cis.lmu.de" ],
    "sections" : [ {
      "heading" : null,
      "text" : "Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 571–581 Vancouver, Canada, July 30 - August 4, 2017. c©2017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-1053"
    }, {
      "heading" : "1 Introduction",
      "text" : "Knowledge Base Question Answering (KBQA) systems answer questions by obtaining information from KB tuples (Berant et al., 2013; Yao et al.,"
    }, {
      "heading" : "2014; Bordes et al., 2015; Bast and Haussmann,",
      "text" : ""
    }, {
      "heading" : "2015; Yih et al., 2015; Xu et al., 2016). For an input question, these systems typically generate a",
      "text" : "KB query, which can be executed to retrieve the answers from a KB. Figure 1 illustrates the process used to parse two sample questions in a KBQA system: (a) a single-relation question, which can be answered with a single <head-entity, relation, tail-entity> KB tuple (Fader et al., 2013; Yih et al., 2014; Bordes et al., 2015); and (b) a more complex case, where some constraints need to be handled\nfor multiple entities in the question. The KBQA system in the figure performs two key tasks: (1) entity linking, which links n-grams in questions to KB entities, and (2) relation detection, which identifies the KB relation(s) a question refers to.\nThe main focus of this work is to improve the relation detection subtask and further explore how it can contribute to the KBQA system. Although general relation detection1 methods are well studied in the NLP community, such studies usually do not take the end task of KBQA into consideration. As a result, there is a significant gap between general relation detection studies and KB-specific relation detection. First, in most general relation detection tasks, the number of target relations is limited, normally smaller than 100. In contrast, in KBQA even a small KB, like Freebase2M (Bordes et al., 2015), contains more than 6,000 relation types. Second, relation detection for KBQA often becomes a zero-shot learning task, since some test instances may have unseen relations in the training data. For example, the SimpleQuestions (Bordes et al., 2015) data set has 14% of the golden test relations not observed in golden training tuples. Third, as shown in Figure 1(b), for some KBQA tasks like WebQuestions (Berant et al., 2013), we need to predict a chain of relations instead of a single relation. This increases the number of target relation types and the sizes of candidate relation pools, further increasing the difficulty of KB relation detection. Owing to these reasons, KB relation detection is significantly more challenging compared to general relation detection tasks.\nThis paper improves KB relation detection to cope with the problems mentioned above. First, in order to deal with the unseen relations, we propose to break the relation names into word sequences for question-relation matching. Second, noticing\n1In the information extraction field such tasks are usually called relation extraction or relation classification.\n571"
    }, {
      "heading" : "Mike Kelley",
      "text" : ""
    }, {
      "heading" : "Mike Kelley",
      "text" : "that original relation names can sometimes help to match longer question contexts, we propose to build both relation-level and word-level relation representations. Third, we use deep bidirectional LSTMs (BiLSTMs) to learn different levels of question representations in order to match the different levels of relation information. Finally, we propose a residual learning method for sequence matching, which makes the model training easier and results in more abstract (deeper) question representations, thus improves hierarchical matching.\nIn order to assess how the proposed improved relation detection could benefit the KBQA end task, we also propose a simple KBQA implementation composed of two-step relation detection. Given an input question and a set of candidate entities retrieved by an entity linker based on the question, our proposed relation detection model plays a key role in the KBQA process: (1) Re-ranking the entity candidates according to whether they connect to high confident relations detected from the raw question text by the relation detection model. This step is important to deal with the ambiguities normally present in entity linking results. (2) Finding the core relation (chains) for each topic entity2 selection from a much smaller candidate entity set after re-ranking. The above steps are followed by an optional constraint detection step, when the question cannot be answered by single relations (e.g., multiple entities in the question). Finally the highest scored query from the above\n2Following Yih et al. (2015), here topic entity refers to the root of the (directed) query tree; and core-chain is the directed path of relation from root to the answer node.\nsteps is used to query the KB for answers. Our main contributions include: (i) An improved relation detection model by hierarchical matching between questions and relations with residual learning; (ii) We demonstrate that the improved relation detector enables our simple KBQA system to achieve state-of-the-art results on both single-relation and multi-relation KBQA tasks."
    }, {
      "heading" : "2 Related Work",
      "text" : "Relation Extraction Relation extraction (RE) is an important sub-field of information extraction. General research in this field usually works on a (small) pre-defined relation set, where given a text paragraph and two target entities, the goal is to determine whether the text indicates any types of relations between the entities or not. As a result RE is usually formulated as a classification task. Traditional RE methods rely on large amount of hand-crafted features (Zhou et al., 2005; Rink and Harabagiu, 2010; Sun et al., 2011). Recent research benefits a lot from the advancement of deep learning: from word embeddings (Nguyen and Grishman, 2014; Gormley et al., 2015) to deep networks like CNNs and LSTMs (Zeng et al., 2014; dos Santos et al., 2015; Vu et al., 2016) and attention models (Zhou et al., 2016; Wang et al., 2016).\nThe above research assumes there is a fixed (closed) set of relation types, thus no zero-shot learning capability is required. The number of relations is usually not large: The widely used ACE2005 has 11/32 coarse/fine-grained relations; SemEval2010 Task8 has 19 relations; TAC-\nKBP2015 has 74 relations although it considers open-domain Wikipedia relations. All are much fewer than thousands of relations in KBQA. As a result, few work in this field focuses on dealing with large number of relations or unseen relations. Yu et al. (2016) proposed to use relation embeddings in a low-rank tensor method. However their relation embeddings are still trained in supervised way and the number of relations is not large in the experiments.\nRelation Detection in KBQA Systems Relation detection for KBQA also starts with featurerich approaches (Yao and Van Durme, 2014; Bast and Haussmann, 2015) towards usages of deep networks (Yih et al., 2015; Xu et al., 2016; Dai et al., 2016) and attention models (Yin et al., 2016; Golub and He, 2016). Many of the above relation detection research could naturally support large relation vocabulary and open relation sets (especially for QA with OpenIE KB like ParaLex (Fader et al., 2013)), in order to fit the goal of open-domain question answering.\nDifferent KBQA data sets have different levels of requirement about the above open-domain capacity. For example, most of the gold test relations in WebQuestions can be observed during training, thus some prior work on this task adopted the close domain assumption like in the general RE research. While for data sets like SimpleQuestions and ParaLex, the capacity to support large relation sets and unseen relations becomes more necessary. To the end, there are two main solutions: (1) use pre-trained relation embeddings (e.g. from TransE (Bordes et al., 2013)), like (Dai et al., 2016); (2) factorize the relation names to sequences and formulate relation detection as a sequence matching and ranking task. Such factorization works because that the relation names usually comprise meaningful word sequences. For example, Yin et al. (2016) split relations to word sequences for single-relation detection. Liang et al. (2016) also achieve good performance on WebQSP with wordlevel relation representation in an end-to-end neural programmer model. Yih et al. (2015) use character tri-grams as inputs on both question and relation sides. Golub and He (2016) propose a generative framework for single-relation KBQA which predicts relation with a character-level sequenceto-sequence model.\nAnother difference between relation detection in KBQA and general RE is that general RE re-\nsearch assumes that the two argument entities are both available. Thus it usually benefits from features (Nguyen and Grishman, 2014; Gormley et al., 2015) or attention mechanisms (Wang et al., 2016) based on the entity information (e.g. entity types or entity embeddings). For relation detection in KBQA, such information is mostly missing because: (1) one question usually contains single argument (the topic entity) and (2) one KB entity could have multiple types (type vocabulary size larger than 1,500). This makes KB entity typing itself a difficult problem so no previous used entity information in the relation detection model.3"
    }, {
      "heading" : "3 Background: Different Granularity in",
      "text" : "KB Relations\nPrevious research (Yih et al., 2015; Yin et al., 2016) formulates KB relation detection as a sequence matching problem. However, while the questions are natural word sequences, how to represent relations as sequences remains a challenging problem. Here we give an overview of two types of relation sequence representations commonly used in previous work.\n(1) Relation Name as a Single Token (relationlevel). In this case, each relation name is treated as a unique token. The problem with this approach is that it suffers from the low relation coverage due to limited amount of training data, thus cannot generalize well to large number of opendomain relations. For example, in Figure 1, when treating relation names as single tokens, it will be difficult to match the questions to relation names “episodes written” and “starring roles” if these names do not appear in training data – their relation embeddings hrs will be random vectors thus are not comparable to question embeddings hqs.\n(2) Relation as Word Sequence (word-level). In this case, the relation is treated as a sequence of words from the tokenized relation name. It has better generalization, but suffers from the lack of global information from the original relation names. For example in Figure 1(b), when doing only word-level matching, it is difficult to rank the target relation “starring roles” higher compared to the incorrect relation “plays produced”. This is because the incorrect relation contains word “plays”, which is more similar to the question\n3Such entity information has been used in KBQA systems as features for the final answer re-rankers.\n(containing word “play”) in the embedding space. On the other hand, if the target relation co-occurs with questions related to “tv appearance” in training, by treating the whole relation as a token (i.e. relation id), we could better learn the correspondence between this token and phrases like “tv show” and “play on”.\nThe two types of relation representation contain different levels of abstraction. As shown in Table 1, the word-level focuses more on local information (words and short phrases), and the relation-level focus more on global information (long phrases and skip-grams) but suffer from data sparsity. Since both these levels of granularity have their own pros and cons, we propose a hierarchical matching approach for KB relation detection: for a candidate relation, our approach matches the input question to both word-level and relation-level representations to get the final ranking score. Section 4 gives the details of our proposed approach."
    }, {
      "heading" : "4 Improved KB Relation Detection",
      "text" : "This section describes our hierarchical sequence matching with residual learning approach for relation detection. In order to match the question to different aspects of a relation (with different abstraction levels), we deal with three problems as follows on learning question/relation representations."
    }, {
      "heading" : "4.1 Relation Representations from Different Granularity",
      "text" : "We provide our model with both types of relation representation: word-level and relationlevel. Therefore, the input relation becomes r = {rword1 , · · · , rwordM1 } [ {rrel1 , · · · , rrelM2}, where the first M1 tokens are words (e.g. {episode, written}), and the last M2 tokens are relation names, e.g., {episode written} or {starring roles, series} (when the target is a chain like in Figure 1(b)). We transform each token above to its word embed-\nding then use two BiLSTMs (with shared parameters) to get their hidden representations [Bword1:M1 : Brel1:M2 ] (each row vector i is the concatenation between forward/backward representations at i). We initialize the relation sequence LSTMs with the final state representations of the word sequence, as a back-off for unseen relations. We apply one max-pooling on these two sets of vectors and get the final relation representation hr."
    }, {
      "heading" : "4.2 Different Abstractions of Questions Representations",
      "text" : "From Table 1, we can see that different parts of a relation could match different contexts of question texts. Usually relation names could match longer phrases in the question and relation words could match short phrases. Yet different words might match phrases of different lengths.\nAs a result, we hope the question representations could also comprise vectors that summarize various lengths of phrase information (different levels of abstraction), in order to match relation representations of different granularity. We deal with this problem by applying deep BiLSTMs on questions. The first-layer of BiLSTM works on the word embeddings of question words q = {q1, · · · , qN} and gets hidden representations\n(1) 1:N = [ (1) 1 ; · · · ; (1) N ]. The second-layer BiLSTM works on (1)1:N to get the second set of hidden representations (2)1:N . Since the second BiLSTM starts with the hidden vectors from the first layer, intuitively it could learn more general and abstract information compared to the first layer.\nNote that the first(second)-layer of question representations does not necessarily correspond to the word(relation)-level relation representations, instead either layer of question representations could potentially match to either level of relation representations. This raises the difficulty of matching between different levels of relation/question representations; the following section gives our proposal to deal with such problem."
    }, {
      "heading" : "4.3 Hierarchical Matching between Relation and Question",
      "text" : "Now we have question contexts of different lengths encoded in (1)1:N and (2) 1:N . Unlike the standard usage of deep BiLSTMs that employs the representations in the final layer for prediction, here we expect that two layers of question representations can be complementary to each other and both should be compared to the relation representation space (Hierarchical Matching). This is important for our task since each relation token can correspond to phrases of different lengths, mainly because of syntactic variations. For example in Table 1, the relation word written could be matched to either the same single word in the question or a much longer phrase be the writer of.\nWe could perform the above hierarchical matching by computing the similarity between each layer of and hr separately and doing the (weighted) sum between the two scores. However this does not give significant improvement (see Table 2). Our analysis in Section 6.2 shows that this naive method suffers from the training difficulty, evidenced by that the converged training loss of this model is much higher than that of a single-layer baseline model. This is mainly because (1) Deep BiLSTMs do not guarantee that the two-levels of question hidden representations are comparable, the training usually falls to local optima where one layer has good matching scores and the other always has weight close to 0. (2)\nThe training of deeper architectures itself is more difficult.\nTo overcome the above difficulties, we adopt the idea from Residual Networks (He et al., 2016) for hierarchical matching by adding shortcut connections between two BiLSTM layers. We proposed two ways of such Hierarchical Residual Matching: (1) Connecting each (1)i and (2) i , resulting in a 0 i = (1) i + (2) i for each position i. Then the final question representation hq becomes a maxpooling over all\n0 is, 1iN . (2) Applying max-\npooling on (1)1:N and (2) 1:N to get h (1) max and h (2) max, respectively, then setting hq = h(1)max + h (2) max. Finally we compute the matching score of r given q as srel(r;q) = cos(hr,hq).\nIntuitively, the proposed method should benefit from hierarchical training since the second layer is fitting the residues from the first layer of matching, so the two layers of representations are more likely to be complementary to each other. This also ensures the vector spaces of two layers are comparable and makes the second-layer training easier.\nDuring training we adopt a ranking loss to maximizing the margin between the gold relation r+ and other relations r in the candidate pool R.\nlrel = max{0, srel(r+;q) + srel(r ;q)} where is a constant parameter. Fig 2 summarizes the above Hierarchical Residual BiLSTM (HR-BiLSTM) model.\nRemark: Another way of hierarchical matching consists in relying on attention mechanism, e.g. (Parikh et al., 2016), to find the correspondence between different levels of representations. This performs below the HR-BiLSTM (see Table 2)."
    }, {
      "heading" : "5 KBQA Enhanced by Relation Detection",
      "text" : "This section describes our KBQA pipeline system. We make minimal efforts beyond the training of the relation detection model, making the whole system easy to build.\nFollowing previous work (Yih et al., 2015; Xu et al., 2016), our KBQA system takes an existing entity linker to produce the top-K linked entities, ELK(q), for a question q (“initial entity linking”). Then we generate the KB queries for q following the four steps illustrated in Algorithm 1.\nAlgorithm 1: KBQA with two-step relation detection Input : Question q, Knowledge Base KB, the initial\ntop-K entity candidates ELK(q) Output: Top query tuple (ê, r̂, {(c, rc)})\n1 Entity Re-Ranking (first-step relation detection): Use the raw question text as input for a relation detector to score all relations in the KB that are associated to the entities in ELK(q); use the relation scores to re-rank ELK(q) and generate a shorter list EL0K0(q) containing the top-K0 entity candidates (Section 5.1) 2 Relation Detection: Detect relation(s) using the reformatted question text in which the topic entity is replaced by a special token <e> (Section 5.2) 3 Query Generation: Combine the scores from step 1 and 2, and select the top pair (ê, r̂) (Section 5.3) 4 Constraint Detection (optional): Compute similarity between q and any neighbor entity c of the entities along r̂ (connecting by a relation rc) , add the high scoring c and rc to the query (Section 5.4).\nCompared to previous approaches, the main difference is that we have an additional entity reranking step after the initial entity linking. We have this step because we have observed that entity linking sometimes becomes a bottleneck in KBQA systems. For example, on SimpleQuestions the best reported linker could only get 72.7% top-1 accuracy on identifying topic entities. This is usually due to the ambiguities of entity names, e.g. in Fig 1(a), there are TV writer and baseball player “Mike Kelley”, which is impossible to distinguish with only entity name matching.\nHaving observed that different entity candidates usually connect to different relations, here we propose to help entity disambiguation in the initial entity linking with relations detected in questions.\nSections 5.1 and 5.2 elaborate how our relation detection help to re-rank entities in the initial entity linking, and then those re-ranked entities enable more accurate relation detection. The KBQA end task, as a result, benefits from this process."
    }, {
      "heading" : "5.1 Entity Re-Ranking",
      "text" : "In this step, we use the raw question text as input for a relation detector to score all relations in the KB with connections to at least one of the entity candidates in ELK(q). We call this step relation detection on entity set since it does not work on a single topic entity as the usual settings. We use the HR-BiLSTM as described in Sec. 4. For each question q, after generating a score srel(r; q) for each relation using HR-BiLSTM, we use the top l best scoring relations (Rlq) to re-rank the original entity candidates. Concretely, for each entity e and its associated relations Re, given the original entity linker score slinker, and the score of the most confident relation r 2 Rlq\\Re, we sum these two scores to re-rank the entities:\nsrerank(e; q) =↵ · slinker(e; q) +(1 ↵) · max\nr2Rlq\\Re srel(r; q).\nFinally, we select top K 0 < K entities according to score srerank to form the re-ranked list EL 0 K0(q).\nWe use the same example in Fig 1(a) to illustrate the idea. Given the input question in the example, a relation detector is very likely to assign high scores to relations such as “episodes written”, “author of ” and “profession”. Then, according to the connections of entity candidates in KB, we find that the TV writer “Mike Kelley” will be scored higher than the baseball player “Mike Kelley”, because the former has the relations “episodes written” and “profession”. This method can be viewed as exploiting entity-relation collocation for entity linking."
    }, {
      "heading" : "5.2 Relation Detection",
      "text" : "In this step, for each candidate entity e 2 EL0K(q), we use the question text as the input to a relation detector to score all the relations r 2 Re that are associated to the entity e in the KB.4 Because we have a single topic entity input in this step, we do the following question reformatting: we replace the the candidate e’s entity mention in\n4Note that the number of entities and the number of relation candidates will be much smaller than those in the previous step.\nq with a token “<e>”. This helps the model better distinguish the relative position of each word compared to the entity. We use the HR-BiLSTM model to predict the score of each relation r 2 Re: srel(r; e, q)."
    }, {
      "heading" : "5.3 Query Generation",
      "text" : "Finally, the system outputs the <entity, relation (or core-chain)> pair (ê, r̂) according to:\ns(ê, r̂; q) = max e2EL0 K0 (q),r2Re ( · srerank(e; q)\n+(1 ) · srel(r; e, q)) , where is a hyperparameter to be tuned."
    }, {
      "heading" : "5.4 Constraint Detection",
      "text" : "Similar to (Yih et al., 2015), we adopt an additional constraint detection step based on text matching. Our method can be viewed as entitylinking on a KB sub-graph. It contains two steps: (1) Sub-graph generation: given the top scored query generated by the previous 3 steps5, for each node v (answer node or the CVT node like in Figure 1(b)), we collect all the nodes c connecting to v (with relation rc) with any relation, and generate a sub-graph associated to the original query. (2) Entity-linking on sub-graph nodes: we compute a matching score between each n-gram in the input question (without overlapping the topic entity) and entity name of c (except for the node in the original query) by taking into account the maximum overlapping sequence of characters between them (see Appendix A for details and B for special rules dealing with date/answer type constraints). If the matching score is larger than a threshold ✓ (tuned on training set), we will add the constraint entity c (and rc) to the query by attaching it to the corresponding node v on the core-chain."
    }, {
      "heading" : "6 Experiments",
      "text" : ""
    }, {
      "heading" : "6.1 Task Introduction & Settings",
      "text" : "We use the SimpleQuestions (Bordes et al., 2015) and WebQSP (Yih et al., 2016) datasets. Each question in these datasets is labeled with the gold semantic parse. Hence we can directly evaluate relation detection performance independently as well as evaluate on the KBQA end task.\n5Starting with the top-1 query suffers more from error propagation. However we still achieve state-of-the-art on WebQSP in Sec.6, showing the advantage of our relation detection model. We leave in future work beam-search and feature extraction on beam for final answer re-ranking like in previous research.\nSimpleQuestions (SQ): It is a single-relation KBQA task. The KB we use consists of a Freebase subset with 2M entities (FB2M) (Bordes et al., 2015), in order to compare with previous research. Yin et al. (2016) also evaluated their relation extractor on this data set and released their proposed question-relation pairs, so we run our relation detection model on their data set. For the KBQA evaluation, we also start with their entity linking results6. Therefore, our results can be compared with their reported results on both tasks. WebQSP (WQ): A multi-relation KBQA task. We use the entire Freebase KB for evaluation purposes. Following Yih et al. (2016), we use S-MART (Yang and Chang, 2015) entity-linking outputs.7 In order to evaluate the relation detection models, we create a new relation detection task from the WebQSP data set.8 For each question and its labeled semantic parse: (1) we first select the topic entity from the parse; and then (2) select all the relations and relation chains (length  2) connected to the topic entity, and set the corechain labeled in the parse as the positive label and all the others as the negative examples.\nWe tune the following hyper-parameters on development sets: (1) the size of hidden states for LSTMs ({50, 100, 200, 400})9; (2) learning rate ({0.1, 0.5, 1.0, 2.0}); (3) whether the shortcut connections are between hidden states or between max-pooling results (see Section 4.3); and (4) the number of training epochs.\nFor both the relation detection experiments and the second-step relation detection in KBQA, we have entity replacement first (see Section 5.2 and Figure 1). All word vectors are initialized with 300-d pretrained word embeddings (Mikolov et al., 2013). The embeddings of relation names are randomly initialized, since existing pre-trained relation embeddings (e.g. TransE) usually support limited sets of relation names. We leave the usage of pre-trained relation embeddings to future work."
    }, {
      "heading" : "6.2 Relation Detection Results",
      "text" : "Table 2 shows the results on two relation detection tasks. The AMPCNN result is from (Yin et al., 2016), which yielded state-of-the-art scores by outperforming several attention-based meth-\n6The two resources have been downloaded from https: //github.com/Gorov/SimpleQuestions-EntityLinking\n7https://github.com/scottyih/STAGG 8The dataset is available at https://github.com/Gorov/\nSimpleQuestions-EntityLinking. 9For CNNs we double the size for fair comparison.\nods. We re-implemented the BiCNN model from (Yih et al., 2015), where both questions and relations are represented with the word hash trick on character tri-grams. The baseline BiLSTM with relation word sequence appears to be the best baseline on WebQSP and is close to the previous best result of AMPCNN on SimpleQuestions. Our proposed HR-BiLSTM outperformed the best baselines on both tasks by margins of 2-3% (p < 0.001 and 0.01 compared to the best baseline BiLSTM w/ words on SQ and WQ respectively).\nNote that using only relation names instead of words results in a weaker baseline BiLSTM model. The model yields a significant performance drop on SimpleQuestions (91.2% to 88.9%). However, the drop is much smaller on WebQSP, and it suggests that unseen relations have a much bigger impact on SimpleQuestions.\nAblation Test: The bottom of Table 2 shows ablation results of the proposed HR-BiLSTM. First, hierarchical matching between questions and both relation names and relation words yields improvement on both datasets, especially for SimpleQuestions (93.3% vs. 91.2/88.8%). Second, residual learning helps hierarchical matching compared to weighted-sum and attention-based baselines (see Section 4.3). For the attention-based baseline, we tried the model from (Parikh et al., 2016) and its one-way variations, where the one-way model gives better results10. Note that residual learning significantly helps on WebQSP (80.65% to\n10We also tried to apply the same attention method on deep BiLSTM with residual connections, but it does not lead to better results compared to HR-BiLSTM. We hypothesize that the idea of hierarchical matching with attention mechanism may work better for long sequences, and the new advanced attention mechanisms (Wang and Jiang, 2016; Wang et al., 2017) might help hierarchical matching. We leave the above directions to future work.\n82.53%), while it does not help as much on SimpleQuestions. On SimpleQuestions, even removing the deep layers only causes a small drop in performance. WebQSP benefits more from residual and deeper architecture, possibly because in this dataset it is more important to handle larger scope of context matching.\nFinally, on WebQSP, replacing BiLSTM with CNN in our hierarchical matching framework results in a large performance drop. Yet on SimpleQuestions the gap is much smaller. We believe this is because the LSTM relation encoder can better learn the composition of chains of relations in WebQSP, as it is better at dealing with longer dependencies.\nAnalysis Next, we present empirical evidences, which show why our HR-BiLSTM model achieves the best scores. We use WebQSP for the analysis purposes. First, we have the hypothesis that training of the weighted-sum model usually falls to local optima, since deep BiLSTMs do not guarantee that the two-levels of question hidden representations are comparable. This is evidenced by that during training one layer usually gets a weight close to 0 thus is ignored. For example, one run gives us weights of -75.39/0.14 for the two layers (we take exponential for the final weighted sum). It also gives much lower training accuracy (91.94%) compared to HR-BiLSTM (95.67%), suffering from training difficulty.\nSecond, compared to our deep BiLSTM with shortcut connections, we have the hypothesis that for KB relation detection, training deep BiLSTMs is more difficult without shortcut connections. Our experiments suggest that deeper BiLSTM does not always result in lower training accuracy. In the experiments a two-layer BiLSTM converges to 94.99%, even lower than the 95.25% achieved by a\nsingle-layer BiLSTM. Under our setting the twolayer model captures the single-layer model as a special case (so it could potentially better fit the training data), this result suggests that the deep BiLSTM without shortcut connections might suffers more from training difficulty.\nFinally, we hypothesize that HR-BiLSTM is more than combination of two BiLSTMs with residual connections, because it encourages the hierarchical architecture to learn different levels of abstraction. To verify this, we replace the deep BiLSTM question encoder with two single-layer BiLSTMs (both on words) with shortcut connections between their hidden states. This decreases test accuracy to 76.11%. It gives similar training accuracy compared to HR-BiLSTM, indicating a more serious over-fitting problem. This proves that the residual and deep structures both contribute to the good performance of HR-BiLSTM."
    }, {
      "heading" : "6.3 KBQA End-Task Results",
      "text" : "Table 3 compares our system with two published baselines (1) STAGG (Yih et al., 2015), the stateof-the-art on WebQSP11 and (2) AMPCNN (Yin et al., 2016), the state-of-the-art on SimpleQuestions. Since these two baselines are specially designed/tuned for one particular dataset, they do not generalize well when applied to the other dataset. In order to highlight the effect of different relation detection models on the KBQA end-task, we also implemented another baseline that uses our KBQA system but replaces HR-BiLSTM with our implementation of AMPCNN (for SimpleQuestions) or the char-3-gram BiCNN (for WebQSP) relation detectors (second block in Table 3).\nCompared to the baseline relation detector (3rd row of results), our method, which includes an improved relation detector (HR-BiLSTM), improves the KBQA end task by 2-3% (4th row). Note that in contrast to previous KBQA systems, our system does not use joint-inference or feature-based re-ranking step, nevertheless it still achieves better or comparable results to the state-of-the-art.\nThe third block of the table details two ablation tests for the proposed components in our KBQA systems: (1) Removing the entity re-ranking step significantly decreases the scores. Since the reranking step relies on the relation detection models, this shows that our HR-BiLSTM model contributes to the good performance in multiple ways.\n11The STAGG score on SQ is from (Bao et al., 2016).\nAppendix C gives the detailed performance of the re-ranking step. (2) In contrast to the conclusion in (Yih et al., 2015), constraint detection is crucial for our system12. This is probably because our joint performance on topic entity and core-chain detection is more accurate (77.5% top-1 accuracy), leaving a huge potential (77.5% vs. 58.0%) for the constraint detection module to improve.\nFinally, like STAGG, which uses multiple relation detectors (see Yih et al. (2015) for the three models used), we also try to use the top-3 relation detectors from Section 6.2. As shown on the last row of Table 3, this gives a significant performance boost, resulting in a new state-of-the-art result on SimpleQuestions and a result comparable to the state-of-the-art on WebQSP."
    }, {
      "heading" : "7 Conclusion",
      "text" : "KB relation detection is a key step in KBQA and is significantly different from general relation extraction tasks. We propose a novel KB relation detection model, HR-BiLSTM, that performs hierarchical matching between questions and KB relations. Our model outperforms the previous methods on KB relation detection tasks and allows our KBQA system to achieve state-of-the-arts. For future work, we will investigate the integration of our HR-BiLSTM into end-to-end systems. For example, our model could be integrated into the decoder in (Liang et al., 2016), to provide better sequence prediction. We will also investigate new emerging datasets like GraphQuestions (Su et al.,"
    }, {
      "heading" : "2016) and ComplexQuestions (Bao et al., 2016) to handle more characteristics of general QA.",
      "text" : "12Note that another reason is that we are evaluating on accuracy here. When evaluating on F1 the gap will be smaller."
    }, {
      "heading" : "Junwei Bao, Nan Duan, Zhao Yan, Ming Zhou, and",
      "text" : "Tiejun Zhao. 2016. Constraint-based question answering with knowledge graph. In Proceedings of COLING 2016, the 26th International Conference on Computational Linguistics: Technical Papers. The COLING 2016 Organizing Committee, Osaka, Japan, pages 2503–2514.\nHannah Bast and Elmar Haussmann. 2015. More accurate question answering on freebase. In Proceedings of the 24th ACM International on Conference on Information and Knowledge Management. ACM, pages 1431–1440."
    }, {
      "heading" : "Jonathan Berant, Andrew Chou, Roy Frostig, and Percy",
      "text" : "Liang. 2013. Semantic parsing on Freebase from question-answer pairs. In Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing. Association for Computational Linguistics, Seattle, Washington, USA, pages 1533– 1544."
    }, {
      "heading" : "Antoine Bordes, Nicolas Usunier, Sumit Chopra, and",
      "text" : "Jason Weston. 2015. Large-scale simple question answering with memory networks. arXiv preprint arXiv:1506.02075 ."
    }, {
      "heading" : "Antoine Bordes, Nicolas Usunier, Alberto GarciaDuran, Jason Weston, and Oksana Yakhnenko.",
      "text" : "2013. Translating embeddings for modeling multirelational data. In Advances in Neural Information Processing Systems. pages 2787–2795.\nZihang Dai, Lei Li, and Wei Xu. 2016. Cfo: Conditional focused neural question answering with largescale knowledge bases. In Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers). Association for Computational Linguistics, Berlin, Germany, pages 800–810."
    }, {
      "heading" : "Cicero dos Santos, Bing Xiang, and Bowen Zhou.",
      "text" : "2015. Classifying relations by ranking with convolutional neural networks. In Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint Conference on Natural Language Processing (Volume 1: Long Papers). Association for Computational Linguistics, Beijing, China, pages 626–634."
    }, {
      "heading" : "Anthony Fader, Luke S Zettlemoyer, and Oren Etzioni.",
      "text" : ""
    }, {
      "heading" : "2013. Paraphrase-driven learning for open question",
      "text" : "answering. In ACL (1). Citeseer, pages 1608–1618."
    }, {
      "heading" : "David Golub and Xiaodong He. 2016. Character-level",
      "text" : "question answering with attention. arXiv preprint arXiv:1604.00727 ."
    }, {
      "heading" : "Matthew R. Gormley, Mo Yu, and Mark Dredze. 2015.",
      "text" : "Improved relation extraction with feature-rich compositional embedding models. In Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing. Association for Computational Linguistics, Lisbon, Portugal, pages 1774– 1784."
    }, {
      "heading" : "Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian",
      "text" : "Sun. 2016. Deep residual learning for image recognition. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. pages 770–778."
    }, {
      "heading" : "Chen Liang, Jonathan Berant, Quoc Le, Kenneth D",
      "text" : "Forbus, and Ni Lao. 2016. Neural symbolic machines: Learning semantic parsers on freebase with weak supervision. arXiv preprint arXiv:1611.00020 .\nTomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Corrado, and Jeff Dean. 2013. Distributed representations of words and phrases and their compositionality. In Advances in neural information processing systems. pages 3111–3119.\nThien Huu Nguyen and Ralph Grishman. 2014. Employing word representations and regularization for domain adaptation of relation extraction. In Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers). Association for Computational Linguistics, Baltimore, Maryland, pages 68–74."
    }, {
      "heading" : "Ankur Parikh, Oscar Täckström, Dipanjan Das, and",
      "text" : "Jakob Uszkoreit. 2016. A decomposable attention model for natural language inference. In Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing. Association for Computational Linguistics, Austin, Texas, pages 2249–2255.\nBryan Rink and Sanda Harabagiu. 2010. Utd: Classifying semantic relations by combining lexical and semantic resources. In Proceedings of the 5th International Workshop on Semantic Evaluation. Association for Computational Linguistics, Uppsala, Sweden, pages 256–259."
    }, {
      "heading" : "Yu Su, Huan Sun, Brian Sadler, Mudhakar Srivatsa, Izzeddin Gur, Zenghui Yan, and Xifeng Yan.",
      "text" : "2016. On generating characteristic-rich question sets for qa evaluation. In Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing. Association for Computational Linguistics, Austin, Texas, pages 562–572. https://aclweb.org/anthology/D16-1054."
    }, {
      "heading" : "Ang Sun, Ralph Grishman, and Satoshi Sekine. 2011.",
      "text" : "Semi-supervised relation extraction with large-scale word clustering. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies. Association for Computational Linguistics, Portland, Oregon, USA, pages 521–529.\nNgoc Thang Vu, Heike Adel, Pankaj Gupta, and Hinrich Schütze. 2016. Combining recurrent and convolutional neural networks for relation classification. In Proceedings of the 2016 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies. Association for Computational Linguistics, San Diego, California, pages 534–539."
    }, {
      "heading" : "Linlin Wang, Zhu Cao, Gerard de Melo, and Zhiyuan",
      "text" : "Liu. 2016. Relation classification via multi-level attention cnns. In Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers). Association for Computational Linguistics, Berlin, Germany, pages 1298–1307."
    }, {
      "heading" : "Shuohang Wang and Jing Jiang. 2016. Learning",
      "text" : "natural language inference with lstm. In Proceedings of the 2016 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies. Association for Computational Linguistics, San Diego, California, pages 1442–1451. http://www.aclweb.org/anthology/N16-1170."
    }, {
      "heading" : "Zhiguo Wang, Wael Hamza, and Radu Florian. 2017.",
      "text" : "Bilateral multi-perspective matching for natural language sentences. arXiv preprint arXiv:1702.03814 .\nKun Xu, Siva Reddy, Yansong Feng, Songfang Huang, and Dongyan Zhao. 2016. Question answering on freebase via relation extraction and textual evidence. In Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers). Association for Computational Linguistics, Berlin, Germany, pages 2326–2336."
    }, {
      "heading" : "Yi Yang and Ming-Wei Chang. 2015. S-mart: Novel tree-based structured learning algorithms applied to",
      "text" : "tweet entity linking. In Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint Conference on Natural Language Processing (Volume 1: Long Papers). Association for Computational Linguistics, Beijing, China, pages 504–513."
    }, {
      "heading" : "Xuchen Yao, Jonathan Berant, and Benjamin",
      "text" : "Van Durme. 2014. Freebase qa: Information extraction or semantic parsing? ACL 2014 page 82.\nXuchen Yao and Benjamin Van Durme. 2014. Information extraction over structured data: Question answering with freebase. In ACL (1). Citeseer, pages 956–966."
    }, {
      "heading" : "Wen-tau Yih, Ming-Wei Chang, Xiaodong He, and",
      "text" : "Jianfeng Gao. 2015. Semantic parsing via staged query graph generation: Question answering with knowledge base. In Association for Computational Linguistics (ACL)."
    }, {
      "heading" : "Wen-tau Yih, Xiaodong He, and Christopher Meek.",
      "text" : "2014. Semantic parsing for single-relation question answering. In Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers). Association for Computational Linguistics, Baltimore, Maryland, pages 643–648.\nWen-tau Yih, Matthew Richardson, Chris Meek, MingWei Chang, and Jina Suh. 2016. The value of semantic parse labeling for knowledge base question\nanswering. In Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers). Association for Computational Linguistics, Berlin, Germany, pages 201–206."
    }, {
      "heading" : "Wenpeng Yin, Mo Yu, Bing Xiang, Bowen Zhou, and",
      "text" : "Hinrich Schütze. 2016. Simple question answering by attentive convolutional neural network. In Proceedings of COLING 2016, the 26th International Conference on Computational Linguistics: Technical Papers. The COLING 2016 Organizing Committee, Osaka, Japan, pages 1746–1756."
    }, {
      "heading" : "Mo Yu, Mark Dredze, Raman Arora, and Matthew R.",
      "text" : "Gormley. 2016. Embedding lexical features via lowrank tensors. In Proceedings of the 2016 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies. Association for Computational Linguistics, San Diego, California, pages 1019–1029. http://www.aclweb.org/anthology/N16-1117."
    }, {
      "heading" : "Daojian Zeng, Kang Liu, Siwei Lai, Guangyou Zhou,",
      "text" : "and Jun Zhao. 2014. Relation classification via convolutional deep neural network. In Proceedings of COLING 2014, the 25th International Conference on Computational Linguistics: Technical Papers. Dublin City University and Association for Computational Linguistics, Dublin, Ireland, pages 2335– 2344."
    }, {
      "heading" : "GuoDong Zhou, Jian Su, Jie Zhang, and Min Zhang.",
      "text" : "2005. Exploring various knowledge in relation extraction. In Association for Computational Linguistics. pages 427–434."
    }, {
      "heading" : "Peng Zhou, Wei Shi, Jun Tian, Zhenyu Qi, Bingchen",
      "text" : "Li, Hongwei Hao, and Bo Xu. 2016. Attentionbased bidirectional long short-term memory networks for relation classification. In Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers). Association for Computational Linguistics, Berlin, Germany, pages 207–212."
    } ],
    "references" : [ {
      "title" : "Constraint-based question answering with knowledge graph",
      "author" : [ "Junwei Bao", "Nan Duan", "Zhao Yan", "Ming Zhou", "Tiejun Zhao." ],
      "venue" : "Proceedings of COLING 2016, the 26th International Conference on Computational Linguistics: Technical Papers.",
      "citeRegEx" : "Bao et al\\.,? 2016",
      "shortCiteRegEx" : "Bao et al\\.",
      "year" : 2016
    }, {
      "title" : "More accurate question answering on freebase",
      "author" : [ "Hannah Bast", "Elmar Haussmann." ],
      "venue" : "Proceedings of the 24th ACM International on Conference on Information and Knowledge Management. ACM, pages 1431–1440.",
      "citeRegEx" : "Bast and Haussmann.,? 2015",
      "shortCiteRegEx" : "Bast and Haussmann.",
      "year" : 2015
    }, {
      "title" : "Semantic parsing on Freebase from question-answer pairs",
      "author" : [ "Jonathan Berant", "Andrew Chou", "Roy Frostig", "Percy Liang." ],
      "venue" : "Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing. Association for Computational",
      "citeRegEx" : "Berant et al\\.,? 2013",
      "shortCiteRegEx" : "Berant et al\\.",
      "year" : 2013
    }, {
      "title" : "Large-scale simple question answering with memory networks",
      "author" : [ "Antoine Bordes", "Nicolas Usunier", "Sumit Chopra", "Jason Weston." ],
      "venue" : "arXiv preprint arXiv:1506.02075 .",
      "citeRegEx" : "Bordes et al\\.,? 2015",
      "shortCiteRegEx" : "Bordes et al\\.",
      "year" : 2015
    }, {
      "title" : "Translating embeddings for modeling multirelational data",
      "author" : [ "Antoine Bordes", "Nicolas Usunier", "Alberto GarciaDuran", "Jason Weston", "Oksana Yakhnenko." ],
      "venue" : "Advances in Neural Information Processing Systems. pages 2787–2795.",
      "citeRegEx" : "Bordes et al\\.,? 2013",
      "shortCiteRegEx" : "Bordes et al\\.",
      "year" : 2013
    }, {
      "title" : "Cfo: Conditional focused neural question answering with largescale knowledge bases",
      "author" : [ "Zihang Dai", "Lei Li", "Wei Xu." ],
      "venue" : "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers). Asso-",
      "citeRegEx" : "Dai et al\\.,? 2016",
      "shortCiteRegEx" : "Dai et al\\.",
      "year" : 2016
    }, {
      "title" : "Classifying relations by ranking with convolutional neural networks",
      "author" : [ "Cicero dos Santos", "Bing Xiang", "Bowen Zhou." ],
      "venue" : "Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint",
      "citeRegEx" : "Santos et al\\.,? 2015",
      "shortCiteRegEx" : "Santos et al\\.",
      "year" : 2015
    }, {
      "title" : "Paraphrase-driven learning for open question answering",
      "author" : [ "Anthony Fader", "Luke S Zettlemoyer", "Oren Etzioni." ],
      "venue" : "ACL (1). Citeseer, pages 1608–1618.",
      "citeRegEx" : "Fader et al\\.,? 2013",
      "shortCiteRegEx" : "Fader et al\\.",
      "year" : 2013
    }, {
      "title" : "Character-level question answering with attention",
      "author" : [ "David Golub", "Xiaodong He." ],
      "venue" : "arXiv preprint arXiv:1604.00727 .",
      "citeRegEx" : "Golub and He.,? 2016",
      "shortCiteRegEx" : "Golub and He.",
      "year" : 2016
    }, {
      "title" : "Improved relation extraction with feature-rich compositional embedding models",
      "author" : [ "Matthew R. Gormley", "Mo Yu", "Mark Dredze." ],
      "venue" : "Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing. Association for Compu-",
      "citeRegEx" : "Gormley et al\\.,? 2015",
      "shortCiteRegEx" : "Gormley et al\\.",
      "year" : 2015
    }, {
      "title" : "Deep residual learning for image recognition",
      "author" : [ "Kaiming He", "Xiangyu Zhang", "Shaoqing Ren", "Jian Sun." ],
      "venue" : "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. pages 770–778.",
      "citeRegEx" : "He et al\\.,? 2016",
      "shortCiteRegEx" : "He et al\\.",
      "year" : 2016
    }, {
      "title" : "Neural symbolic machines: Learning semantic parsers on freebase with weak supervision",
      "author" : [ "Chen Liang", "Jonathan Berant", "Quoc Le", "Kenneth D Forbus", "Ni Lao." ],
      "venue" : "arXiv preprint arXiv:1611.00020 .",
      "citeRegEx" : "Liang et al\\.,? 2016",
      "shortCiteRegEx" : "Liang et al\\.",
      "year" : 2016
    }, {
      "title" : "Distributed representations of words and phrases and their compositionality",
      "author" : [ "Tomas Mikolov", "Ilya Sutskever", "Kai Chen", "Greg S Corrado", "Jeff Dean." ],
      "venue" : "Advances in neural information processing systems. pages 3111–3119.",
      "citeRegEx" : "Mikolov et al\\.,? 2013",
      "shortCiteRegEx" : "Mikolov et al\\.",
      "year" : 2013
    }, {
      "title" : "Employing word representations and regularization for domain adaptation of relation extraction",
      "author" : [ "Thien Huu Nguyen", "Ralph Grishman." ],
      "venue" : "Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics (Volume 2: Short",
      "citeRegEx" : "Nguyen and Grishman.,? 2014",
      "shortCiteRegEx" : "Nguyen and Grishman.",
      "year" : 2014
    }, {
      "title" : "A decomposable attention model for natural language inference",
      "author" : [ "Ankur Parikh", "Oscar Täckström", "Dipanjan Das", "Jakob Uszkoreit." ],
      "venue" : "Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing. Association",
      "citeRegEx" : "Parikh et al\\.,? 2016",
      "shortCiteRegEx" : "Parikh et al\\.",
      "year" : 2016
    }, {
      "title" : "Utd: Classifying semantic relations by combining lexical and semantic resources",
      "author" : [ "Bryan Rink", "Sanda Harabagiu." ],
      "venue" : "Proceedings of the 5th International Workshop on Semantic Evaluation. Association for Computational Linguistics, Uppsala, Swe-",
      "citeRegEx" : "Rink and Harabagiu.,? 2010",
      "shortCiteRegEx" : "Rink and Harabagiu.",
      "year" : 2010
    }, {
      "title" : "On generating characteristic-rich question sets for qa evaluation",
      "author" : [ "Yu Su", "Huan Sun", "Brian Sadler", "Mudhakar Srivatsa", "Izzeddin Gur", "Zenghui Yan", "Xifeng Yan." ],
      "venue" : "Proceedings of the 2016 Conference on Empirical Methods in Natu-",
      "citeRegEx" : "Su et al\\.,? 2016",
      "shortCiteRegEx" : "Su et al\\.",
      "year" : 2016
    }, {
      "title" : "Semi-supervised relation extraction with large-scale word clustering",
      "author" : [ "Ang Sun", "Ralph Grishman", "Satoshi Sekine." ],
      "venue" : "Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies. Associa-",
      "citeRegEx" : "Sun et al\\.,? 2011",
      "shortCiteRegEx" : "Sun et al\\.",
      "year" : 2011
    }, {
      "title" : "Combining recurrent and convolutional neural networks for relation classification",
      "author" : [ "Ngoc Thang Vu", "Heike Adel", "Pankaj Gupta", "Hinrich Schütze." ],
      "venue" : "Proceedings of the 2016 Conference of the North American Chapter of the Association for",
      "citeRegEx" : "Vu et al\\.,? 2016",
      "shortCiteRegEx" : "Vu et al\\.",
      "year" : 2016
    }, {
      "title" : "Relation classification via multi-level attention cnns",
      "author" : [ "Linlin Wang", "Zhu Cao", "Gerard de Melo", "Zhiyuan Liu." ],
      "venue" : "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers). Association for",
      "citeRegEx" : "Wang et al\\.,? 2016",
      "shortCiteRegEx" : "Wang et al\\.",
      "year" : 2016
    }, {
      "title" : "Learning natural language inference with lstm",
      "author" : [ "Shuohang Wang", "Jing Jiang." ],
      "venue" : "Proceedings of the 2016 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Tech-",
      "citeRegEx" : "Wang and Jiang.,? 2016",
      "shortCiteRegEx" : "Wang and Jiang.",
      "year" : 2016
    }, {
      "title" : "Bilateral multi-perspective matching for natural language sentences",
      "author" : [ "Zhiguo Wang", "Wael Hamza", "Radu Florian." ],
      "venue" : "arXiv preprint arXiv:1702.03814 .",
      "citeRegEx" : "Wang et al\\.,? 2017",
      "shortCiteRegEx" : "Wang et al\\.",
      "year" : 2017
    }, {
      "title" : "Question answering on freebase via relation extraction and textual evidence",
      "author" : [ "Kun Xu", "Siva Reddy", "Yansong Feng", "Songfang Huang", "Dongyan Zhao." ],
      "venue" : "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 1:",
      "citeRegEx" : "Xu et al\\.,? 2016",
      "shortCiteRegEx" : "Xu et al\\.",
      "year" : 2016
    }, {
      "title" : "S-mart: Novel tree-based structured learning algorithms applied to tweet entity linking",
      "author" : [ "Yi Yang", "Ming-Wei Chang." ],
      "venue" : "Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint Confer-",
      "citeRegEx" : "Yang and Chang.,? 2015",
      "shortCiteRegEx" : "Yang and Chang.",
      "year" : 2015
    }, {
      "title" : "Freebase qa: Information extraction or semantic parsing",
      "author" : [ "Xuchen Yao", "Jonathan Berant", "Benjamin Van Durme" ],
      "venue" : "ACL",
      "citeRegEx" : "Yao et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Yao et al\\.",
      "year" : 2014
    }, {
      "title" : "Information extraction over structured data: Question answering with freebase",
      "author" : [ "Xuchen Yao", "Benjamin Van Durme." ],
      "venue" : "ACL (1). Citeseer, pages 956–966.",
      "citeRegEx" : "Yao and Durme.,? 2014",
      "shortCiteRegEx" : "Yao and Durme.",
      "year" : 2014
    }, {
      "title" : "Semantic parsing via staged query graph generation: Question answering with knowledge base",
      "author" : [ "Wen-tau Yih", "Ming-Wei Chang", "Xiaodong He", "Jianfeng Gao." ],
      "venue" : "Association for Computational Linguistics (ACL).",
      "citeRegEx" : "Yih et al\\.,? 2015",
      "shortCiteRegEx" : "Yih et al\\.",
      "year" : 2015
    }, {
      "title" : "Semantic parsing for single-relation question answering",
      "author" : [ "Wen-tau Yih", "Xiaodong He", "Christopher Meek." ],
      "venue" : "Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers). Association",
      "citeRegEx" : "Yih et al\\.,? 2014",
      "shortCiteRegEx" : "Yih et al\\.",
      "year" : 2014
    }, {
      "title" : "The value of semantic parse labeling for knowledge base question",
      "author" : [ "Wen-tau Yih", "Matthew Richardson", "Chris Meek", "MingWei Chang", "Jina Suh" ],
      "venue" : null,
      "citeRegEx" : "Yih et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Yih et al\\.",
      "year" : 2016
    }, {
      "title" : "Simple question answering by attentive convolutional neural network",
      "author" : [ "Wenpeng Yin", "Mo Yu", "Bing Xiang", "Bowen Zhou", "Hinrich Schütze." ],
      "venue" : "Proceedings of COLING 2016, the 26th International Conference on Computational Linguistics: Techni-",
      "citeRegEx" : "Yin et al\\.,? 2016",
      "shortCiteRegEx" : "Yin et al\\.",
      "year" : 2016
    }, {
      "title" : "Embedding lexical features via lowrank tensors",
      "author" : [ "Mo Yu", "Mark Dredze", "Raman Arora", "Matthew R. Gormley." ],
      "venue" : "Proceedings of the 2016 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language",
      "citeRegEx" : "Yu et al\\.,? 2016",
      "shortCiteRegEx" : "Yu et al\\.",
      "year" : 2016
    }, {
      "title" : "Relation classification via convolutional deep neural network",
      "author" : [ "Daojian Zeng", "Kang Liu", "Siwei Lai", "Guangyou Zhou", "Jun Zhao." ],
      "venue" : "Proceedings of COLING 2014, the 25th International Conference on Computational Linguistics: Technical Papers.",
      "citeRegEx" : "Zeng et al\\.,? 2014",
      "shortCiteRegEx" : "Zeng et al\\.",
      "year" : 2014
    }, {
      "title" : "Exploring various knowledge in relation extraction",
      "author" : [ "GuoDong Zhou", "Jian Su", "Jie Zhang", "Min Zhang." ],
      "venue" : "Association for Computational Linguistics. pages 427–434.",
      "citeRegEx" : "Zhou et al\\.,? 2005",
      "shortCiteRegEx" : "Zhou et al\\.",
      "year" : 2005
    }, {
      "title" : "Attentionbased bidirectional long short-term memory networks for relation classification",
      "author" : [ "Peng Zhou", "Wei Shi", "Jun Tian", "Zhenyu Qi", "Bingchen Li", "Hongwei Hao", "Bo Xu." ],
      "venue" : "Proceedings of the 54th Annual Meeting of the Association for Com-",
      "citeRegEx" : "Zhou et al\\.,? 2016",
      "shortCiteRegEx" : "Zhou et al\\.",
      "year" : 2016
    } ],
    "referenceMentions" : [ {
      "referenceID" : 2,
      "context" : "Knowledge Base Question Answering (KBQA) systems answer questions by obtaining information from KB tuples (Berant et al., 2013; Yao et al., 2014; Bordes et al., 2015; Bast and Haussmann, 2015; Yih et al., 2015; Xu et al., 2016).",
      "startOffset" : 106,
      "endOffset" : 227
    }, {
      "referenceID" : 24,
      "context" : "Knowledge Base Question Answering (KBQA) systems answer questions by obtaining information from KB tuples (Berant et al., 2013; Yao et al., 2014; Bordes et al., 2015; Bast and Haussmann, 2015; Yih et al., 2015; Xu et al., 2016).",
      "startOffset" : 106,
      "endOffset" : 227
    }, {
      "referenceID" : 3,
      "context" : "Knowledge Base Question Answering (KBQA) systems answer questions by obtaining information from KB tuples (Berant et al., 2013; Yao et al., 2014; Bordes et al., 2015; Bast and Haussmann, 2015; Yih et al., 2015; Xu et al., 2016).",
      "startOffset" : 106,
      "endOffset" : 227
    }, {
      "referenceID" : 1,
      "context" : "Knowledge Base Question Answering (KBQA) systems answer questions by obtaining information from KB tuples (Berant et al., 2013; Yao et al., 2014; Bordes et al., 2015; Bast and Haussmann, 2015; Yih et al., 2015; Xu et al., 2016).",
      "startOffset" : 106,
      "endOffset" : 227
    }, {
      "referenceID" : 26,
      "context" : "Knowledge Base Question Answering (KBQA) systems answer questions by obtaining information from KB tuples (Berant et al., 2013; Yao et al., 2014; Bordes et al., 2015; Bast and Haussmann, 2015; Yih et al., 2015; Xu et al., 2016).",
      "startOffset" : 106,
      "endOffset" : 227
    }, {
      "referenceID" : 22,
      "context" : "Knowledge Base Question Answering (KBQA) systems answer questions by obtaining information from KB tuples (Berant et al., 2013; Yao et al., 2014; Bordes et al., 2015; Bast and Haussmann, 2015; Yih et al., 2015; Xu et al., 2016).",
      "startOffset" : 106,
      "endOffset" : 227
    }, {
      "referenceID" : 7,
      "context" : "Figure 1 illustrates the process used to parse two sample questions in a KBQA system: (a) a single-relation question, which can be answered with a single <head-entity, relation, tail-entity> KB tuple (Fader et al., 2013; Yih et al., 2014; Bordes et al., 2015); and (b) a more complex case, where some constraints need to be handled for multiple entities in the question.",
      "startOffset" : 200,
      "endOffset" : 259
    }, {
      "referenceID" : 27,
      "context" : "Figure 1 illustrates the process used to parse two sample questions in a KBQA system: (a) a single-relation question, which can be answered with a single <head-entity, relation, tail-entity> KB tuple (Fader et al., 2013; Yih et al., 2014; Bordes et al., 2015); and (b) a more complex case, where some constraints need to be handled for multiple entities in the question.",
      "startOffset" : 200,
      "endOffset" : 259
    }, {
      "referenceID" : 3,
      "context" : "Figure 1 illustrates the process used to parse two sample questions in a KBQA system: (a) a single-relation question, which can be answered with a single <head-entity, relation, tail-entity> KB tuple (Fader et al., 2013; Yih et al., 2014; Bordes et al., 2015); and (b) a more complex case, where some constraints need to be handled for multiple entities in the question.",
      "startOffset" : 200,
      "endOffset" : 259
    }, {
      "referenceID" : 3,
      "context" : "KBQA even a small KB, like Freebase2M (Bordes et al., 2015), contains more than 6,000 relation types.",
      "startOffset" : 38,
      "endOffset" : 59
    }, {
      "referenceID" : 3,
      "context" : "For example, the SimpleQuestions (Bordes et al., 2015) data set has 14% of the golden test relations not observed in golden training tuples.",
      "startOffset" : 33,
      "endOffset" : 54
    }, {
      "referenceID" : 2,
      "context" : "Third, as shown in Figure 1(b), for some KBQA tasks like WebQuestions (Berant et al., 2013), we need to predict a chain of relations instead of a single relation.",
      "startOffset" : 70,
      "endOffset" : 91
    }, {
      "referenceID" : 32,
      "context" : "Traditional RE methods rely on large amount of hand-crafted features (Zhou et al., 2005; Rink and Harabagiu, 2010; Sun et al., 2011).",
      "startOffset" : 69,
      "endOffset" : 132
    }, {
      "referenceID" : 15,
      "context" : "Traditional RE methods rely on large amount of hand-crafted features (Zhou et al., 2005; Rink and Harabagiu, 2010; Sun et al., 2011).",
      "startOffset" : 69,
      "endOffset" : 132
    }, {
      "referenceID" : 17,
      "context" : "Traditional RE methods rely on large amount of hand-crafted features (Zhou et al., 2005; Rink and Harabagiu, 2010; Sun et al., 2011).",
      "startOffset" : 69,
      "endOffset" : 132
    }, {
      "referenceID" : 13,
      "context" : "Recent research benefits a lot from the advancement of deep learning: from word embeddings (Nguyen and Grishman, 2014; Gormley et al., 2015) to deep networks like CNNs and LSTMs (Zeng et al.",
      "startOffset" : 91,
      "endOffset" : 140
    }, {
      "referenceID" : 9,
      "context" : "Recent research benefits a lot from the advancement of deep learning: from word embeddings (Nguyen and Grishman, 2014; Gormley et al., 2015) to deep networks like CNNs and LSTMs (Zeng et al.",
      "startOffset" : 91,
      "endOffset" : 140
    }, {
      "referenceID" : 31,
      "context" : ", 2015) to deep networks like CNNs and LSTMs (Zeng et al., 2014; dos Santos et al., 2015; Vu et al., 2016) and attention models (Zhou et al.",
      "startOffset" : 45,
      "endOffset" : 106
    }, {
      "referenceID" : 18,
      "context" : ", 2015) to deep networks like CNNs and LSTMs (Zeng et al., 2014; dos Santos et al., 2015; Vu et al., 2016) and attention models (Zhou et al.",
      "startOffset" : 45,
      "endOffset" : 106
    }, {
      "referenceID" : 1,
      "context" : "tion detection for KBQA also starts with featurerich approaches (Yao and Van Durme, 2014; Bast and Haussmann, 2015) towards usages of deep networks (Yih et al.",
      "startOffset" : 64,
      "endOffset" : 115
    }, {
      "referenceID" : 26,
      "context" : "tion detection for KBQA also starts with featurerich approaches (Yao and Van Durme, 2014; Bast and Haussmann, 2015) towards usages of deep networks (Yih et al., 2015; Xu et al., 2016; Dai et al., 2016) and attention models (Yin et al.",
      "startOffset" : 148,
      "endOffset" : 201
    }, {
      "referenceID" : 22,
      "context" : "tion detection for KBQA also starts with featurerich approaches (Yao and Van Durme, 2014; Bast and Haussmann, 2015) towards usages of deep networks (Yih et al., 2015; Xu et al., 2016; Dai et al., 2016) and attention models (Yin et al.",
      "startOffset" : 148,
      "endOffset" : 201
    }, {
      "referenceID" : 5,
      "context" : "tion detection for KBQA also starts with featurerich approaches (Yao and Van Durme, 2014; Bast and Haussmann, 2015) towards usages of deep networks (Yih et al., 2015; Xu et al., 2016; Dai et al., 2016) and attention models (Yin et al.",
      "startOffset" : 148,
      "endOffset" : 201
    }, {
      "referenceID" : 7,
      "context" : "Many of the above relation detection research could naturally support large relation vocabulary and open relation sets (especially for QA with OpenIE KB like ParaLex (Fader et al., 2013)), in order to fit the goal of",
      "startOffset" : 166,
      "endOffset" : 186
    }, {
      "referenceID" : 5,
      "context" : ", 2013)), like (Dai et al., 2016); (2) factorize the relation names to sequences and formulate relation detection as a sequence matching and ranking task.",
      "startOffset" : 15,
      "endOffset" : 33
    }, {
      "referenceID" : 13,
      "context" : "Thus it usually benefits from features (Nguyen and Grishman, 2014; Gormley et al., 2015) or attention mechanisms (Wang et al.",
      "startOffset" : 39,
      "endOffset" : 88
    }, {
      "referenceID" : 9,
      "context" : "Thus it usually benefits from features (Nguyen and Grishman, 2014; Gormley et al., 2015) or attention mechanisms (Wang et al.",
      "startOffset" : 39,
      "endOffset" : 88
    }, {
      "referenceID" : 19,
      "context" : ", 2015) or attention mechanisms (Wang et al., 2016) based on the entity information (e.",
      "startOffset" : 32,
      "endOffset" : 51
    }, {
      "referenceID" : 26,
      "context" : "Previous research (Yih et al., 2015; Yin et al., 2016) formulates KB relation detection as a sequence matching problem.",
      "startOffset" : 18,
      "endOffset" : 54
    }, {
      "referenceID" : 29,
      "context" : "Previous research (Yih et al., 2015; Yin et al., 2016) formulates KB relation detection as a sequence matching problem.",
      "startOffset" : 18,
      "endOffset" : 54
    }, {
      "referenceID" : 10,
      "context" : "To overcome the above difficulties, we adopt the idea from Residual Networks (He et al., 2016) for hierarchical matching by adding shortcut connec-",
      "startOffset" : 77,
      "endOffset" : 94
    }, {
      "referenceID" : 14,
      "context" : "(Parikh et al., 2016), to find the correspondence between different levels of representations.",
      "startOffset" : 0,
      "endOffset" : 21
    }, {
      "referenceID" : 26,
      "context" : "Following previous work (Yih et al., 2015; Xu et al., 2016), our KBQA system takes an existing entity linker to produce the top-K linked entities, ELK(q), for a question q (“initial entity linking”).",
      "startOffset" : 24,
      "endOffset" : 59
    }, {
      "referenceID" : 22,
      "context" : "Following previous work (Yih et al., 2015; Xu et al., 2016), our KBQA system takes an existing entity linker to produce the top-K linked entities, ELK(q), for a question q (“initial entity linking”).",
      "startOffset" : 24,
      "endOffset" : 59
    }, {
      "referenceID" : 26,
      "context" : "Similar to (Yih et al., 2015), we adopt an additional constraint detection step based on text matching.",
      "startOffset" : 11,
      "endOffset" : 29
    }, {
      "referenceID" : 3,
      "context" : "We use the SimpleQuestions (Bordes et al., 2015) and WebQSP (Yih et al.",
      "startOffset" : 27,
      "endOffset" : 48
    }, {
      "referenceID" : 3,
      "context" : "The KB we use consists of a Freebase subset with 2M entities (FB2M) (Bordes et al., 2015), in order to compare with previous research.",
      "startOffset" : 68,
      "endOffset" : 89
    }, {
      "referenceID" : 23,
      "context" : "(2016), we use S-MART (Yang and Chang, 2015) entity-linking outputs.",
      "startOffset" : 22,
      "endOffset" : 44
    }, {
      "referenceID" : 12,
      "context" : "All word vectors are initialized with 300-d pretrained word embeddings (Mikolov et al., 2013).",
      "startOffset" : 71,
      "endOffset" : 93
    }, {
      "referenceID" : 29,
      "context" : "The AMPCNN result is from (Yin et al., 2016), which yielded state-of-the-art scores by outperforming several attention-based meth-",
      "startOffset" : 26,
      "endOffset" : 44
    }, {
      "referenceID" : 29,
      "context" : "Accuracy Model Relation Input Views SimpleQuestions WebQSP AMPCNN (Yin et al., 2016) words 91.",
      "startOffset" : 66,
      "endOffset" : 84
    }, {
      "referenceID" : 14,
      "context" : "65 replacing residual with attention (Parikh et al., 2016) words + rel names 92.",
      "startOffset" : 37,
      "endOffset" : 58
    }, {
      "referenceID" : 26,
      "context" : "We re-implemented the BiCNN model from (Yih et al., 2015), where both questions and relations are represented with the word hash trick on",
      "startOffset" : 39,
      "endOffset" : 57
    }, {
      "referenceID" : 14,
      "context" : "For the attention-based baseline, we tried the model from (Parikh et al., 2016) and its one-way variations, where the one-way model gives better results10.",
      "startOffset" : 58,
      "endOffset" : 79
    }, {
      "referenceID" : 20,
      "context" : "We hypothesize that the idea of hierarchical matching with attention mechanism may work better for long sequences, and the new advanced attention mechanisms (Wang and Jiang, 2016; Wang et al., 2017) might help hierarchical matching.",
      "startOffset" : 157,
      "endOffset" : 198
    }, {
      "referenceID" : 21,
      "context" : "We hypothesize that the idea of hierarchical matching with attention mechanism may work better for long sequences, and the new advanced attention mechanisms (Wang and Jiang, 2016; Wang et al., 2017) might help hierarchical matching.",
      "startOffset" : 157,
      "endOffset" : 198
    }, {
      "referenceID" : 26,
      "context" : "baselines (1) STAGG (Yih et al., 2015), the stateof-the-art on WebQSP11 and (2) AMPCNN (Yin et al.",
      "startOffset" : 20,
      "endOffset" : 38
    }, {
      "referenceID" : 29,
      "context" : ", 2015), the stateof-the-art on WebQSP11 and (2) AMPCNN (Yin et al., 2016), the state-of-the-art on SimpleQuestions.",
      "startOffset" : 56,
      "endOffset" : 74
    }, {
      "referenceID" : 26,
      "context" : "in (Yih et al., 2015), constraint detection is crucial for our system12.",
      "startOffset" : 3,
      "endOffset" : 21
    }, {
      "referenceID" : 11,
      "context" : "For example, our model could be integrated into the decoder in (Liang et al., 2016), to provide better sequence prediction.",
      "startOffset" : 63,
      "endOffset" : 83
    }, {
      "referenceID" : 16,
      "context" : "We will also investigate new emerging datasets like GraphQuestions (Su et al., 2016) and ComplexQuestions (Bao et al.",
      "startOffset" : 67,
      "endOffset" : 84
    }, {
      "referenceID" : 0,
      "context" : ", 2016) and ComplexQuestions (Bao et al., 2016) to handle more characteristics of general QA.",
      "startOffset" : 29,
      "endOffset" : 47
    } ],
    "year" : 2017,
    "abstractText" : "Relation detection is a core component of many NLP applications including Knowledge Base Question Answering (KBQA). In this paper, we propose a hierarchical recurrent neural network enhanced by residual learning which detects KB relations given an input question. Our method uses deep residual bidirectional LSTMs to compare questions and relation names via different levels of abstraction. Additionally, we propose a simple KBQA system that integrates entity linking and our proposed relation detector to make the two components enhance each other. Our experimental results show that our approach not only achieves outstanding relation detection performance, but more importantly, it helps our KBQA system achieve state-of-the-art accuracy for both single-relation (SimpleQuestions) and multi-relation (WebQSP) QA benchmarks.",
    "creator" : "LaTeX with hyperref package"
  }
}